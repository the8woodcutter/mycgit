server {
    server_name cgit.packets.cc;
    root /usr/share/cgit;
    try_files $uri @cgit;

    # Configure HTTP transport
    location ~ /.+/(info/refs|git-upload-pack) {
        include             fastcgi_params;
        fastcgi_param       SCRIPT_FILENAME     /usr/lib/git-core/git-http-backend;
        fastcgi_param       PATH_INFO           $uri;
        fastcgi_param       GIT_HTTP_EXPORT_ALL 1;
        fastcgi_param       GIT_PROJECT_ROOT    /srv/git;
        fastcgi_param       HOME                /srv/git;
        fastcgi_pass        unix:/run/fcgiwrap.socket;
    }

    location @cgit {
      include             fastcgi_params;
      fastcgi_param       SCRIPT_FILENAME /usr/lib/cgit/cgit.cgi;
      fastcgi_param       PATH_INFO       $uri;
      fastcgi_param       QUERY_STRING    $args;
      fastcgi_param       HTTP_HOST       $server_name;
      fastcgi_pass        unix:/run/fcgiwrap.socket;
    }

#    location @cgit {
#        include	fastcgi_params;
#        fastcgi_param       SCRIPT_FILENAME /usr/lib/cgit/cgit.cgi;
#        fastcgi_param       PATH_INFO       $uri;
#        fastcgi_param       QUERY_STRING    $args;
#        fastcgi_param       HTTP_HOST       $server_name;
#        fastcgi_pass        unix:/run/fcgiwrap.socket;
#    }


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cgit.packets.cc/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cgit.packets.cc/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = cgit.packets.cc) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen [::]:80;
    listen 80;
    server_name cgit.packets.cc;
    return 404; # managed by Certbot


}